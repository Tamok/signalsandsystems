---
interface Props {
  type?: 'info' | 'warning' | 'error' | 'tip';
  title?: string;
}

const { 
  type = 'info',
  title 
} = Astro.props;

// Set colors based on type
const bgColor = {
  info: "bg-blue-50",
  warning: "bg-yellow-50",
  error: "bg-red-50",
  tip: "bg-green-50"
}[type];

const borderColor = {
  info: "border-blue-400",
  warning: "border-yellow-400",
  error: "border-red-400",
  tip: "border-green-400"
}[type];

const textColor = {
  info: "text-blue-700",
  warning: "text-yellow-700",
  error: "text-red-700",
  tip: "text-green-700"
}[type];

const iconColor = {
  info: "text-blue-400",
  warning: "text-yellow-400",
  error: "text-red-400",
  tip: "text-green-400"
}[type];

// Set icon based on type
let icon = '';
switch(type) {
  case 'info':
    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9z" clip-rule="evenodd" />
            </svg>`;
    break;
  case 'warning':
    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
            </svg>`;
    break;
  case 'error':
    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>`;
    break;
  case 'tip':
    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path d="M11 3a1 1 0 10-2 0v1a1 1 0 102 0V3zM15.657 5.757a1 1 0 00-1.414-1.414l-.707.707a1 1 0 001.414 1.414l.707-.707zM18 10a1 1 0 01-1 1h-1a1 1 0 110-2h1a1 1 0 011 1zM5.05 6.464A1 1 0 106.464 5.05l-.707-.707a1 1 0 00-1.414 1.414l.707.707zM5 10a1 1 0 01-1 1H3a1 1 0 110-2h1a1 1 0 011 1zM8 16v-1h4v1a2 2 0 11-4 0zM12 14c.015-.34.208-.646.477-.859a4 4 0 10-4.954 0c.27.213.462.519.476.859h4.002z" />
            </svg>`;
    break;
}

const defaultTitle = {
  info: 'Information',
  warning: 'Warning',
  error: 'Error',
  tip: 'Tip'
}[type];
---

<div class={`callout-box ${bgColor} border-l-4 ${borderColor} p-4 mb-4 mt-4 rounded-md`}>
  <div class="flex">
    <div class={`flex-shrink-0 ${iconColor}`} set:html={icon} />
    <div class="ml-3">
      {(title || defaultTitle) && (
        <h3 class={`text-sm font-medium ${textColor}`}>
          {title || defaultTitle}
        </h3>
      )}
      <div class={`mt-2 text-sm ${textColor}`}>
        <slot />
      </div>
    </div>
  </div>
</div>
