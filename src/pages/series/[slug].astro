---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import SeriesLayout from '../../layouts/SeriesLayout.astro';
import Nav from '../../components/Nav.astro';
import Footer from '../../components/Footer.astro';
import { getSeriesBySlug, getSeriesArticles } from '../../utils/content';

// Generate static paths for all series
export async function getStaticPaths() {
  const seriesEntries = await getCollection('series');
  return seriesEntries.map(entry => ({
    params: { slug: entry.id },
    props: { seriesSlug: entry.id }
  }));
}

// Get series information
const { seriesSlug } = Astro.props;
const series = await getSeriesBySlug(seriesSlug);
const seriesArticles = await getSeriesArticles(seriesSlug);
const sortedArticles = [...seriesArticles].sort(
  (a, b) => (a.order ?? 0) - (b.order ?? 0)
);

// If series doesn't exist, show a 404 or redirect
if (!series) {
  return Astro.redirect('/404');
}
---

<BaseLayout 
  title={`${series.title} | Signals & Systems`}
  description={series.description}
>
  <Nav slot="header" />
  
  <div class="container mx-auto px-4 py-12 sm:px-6 lg:px-8">
    <div class="max-w-3xl mx-auto">
      <header class="mb-12 text-center">
        <h1 class="text-4xl font-bold text-gray-900 mb-4">{series.title}</h1>
        <p class="text-xl text-gray-600">
          {series.description}
        </p>
      </header>
      
      <div class="space-y-10">
        {sortedArticles.map((article) => (
          <article class="bg-white rounded-lg shadow-md overflow-hidden">
            <div class="p-6">
              <h2 class="text-2xl font-bold text-gray-900 mb-2">
                <a href={`/devlog/${article.slug}`} class="hover:text-blue-600 transition-colors">
                  {article.title}
                </a>
              </h2>
              <p class="text-gray-700 mb-4">{article.description}</p>
              <div class="flex items-center justify-between">
                <span class="text-sm text-gray-500">
                  {article.publishDate.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </span>
                <a href={`/devlog/${article.slug}`} class="text-sm font-medium text-blue-600 hover:text-blue-500">
                  Read more â†’
                </a>
              </div>
            </div>
          </article>
        ))}
      </div>
    </div>
  </div>
  
  <Footer slot="footer" />
</BaseLayout>
