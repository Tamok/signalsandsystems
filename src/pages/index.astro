---
import BaseLayout from "../layouts/BaseLayout.astro";
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";
import { getAllArticles, getAllSeries } from "../utils/content";

const articles = await getAllArticles();
const latestArticles = [...articles].sort((a, b) => b.publishDate.getTime() - a.publishDate.getTime()).slice(0, 4);
const series = await getAllSeries();
const latestSeries = [...series].sort((a, b) => b.startDate.getTime() - a.startDate.getTime()).slice(0, 4);
---

<BaseLayout title="Signals & Systems - A personal publishing platform">
  <Nav slot="header" />
  
  <div class="container mx-auto px-4 py-12 sm:px-6 lg:px-8">
    <section class="text-center mb-16">
      <h1 class="text-5xl font-extrabold text-gray-900 mb-6">Signals & Systems</h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        A personal, self-hosted publishing platform designed for long-form, markdown-native articles enriched with interactive elements.
      </p>
      <div class="text-red-600 text-sm mt-4">DEBUG: {articles.length} articles found</div>
    </section>
    
    <section class="max-w-5xl mx-auto mb-16">
      <h2 class="text-3xl font-bold text-gray-800 mb-6">Latest Articles</h2>
      <div class="grid gap-8 md:grid-cols-2">
        {latestArticles.map(article => (
          <div class="bg-white rounded-lg shadow-md overflow-hidden">
            <div class="p-6">
              <h3 class="text-xl font-semibold mb-2">
                <a href={`/devlog/${article.slug}`} class="text-blue-600 hover:text-blue-800">
                  {article.title}
                </a>
              </h3>
              <p class="text-gray-600 mb-4">
                {article.description}
              </p>
              <div class="flex items-center text-sm text-gray-500">
                <span>{article.publishDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
                <span class="mx-2">•</span>
                <span>JELL</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
    
    <section class="max-w-5xl mx-auto">
      <h2 class="text-3xl font-bold text-gray-800 mb-6">Series</h2>
      <div class="grid gap-8 md:grid-cols-2">
        {latestSeries.map(s => (
          <div class="bg-white rounded-lg shadow-md overflow-hidden">
            <div class="p-6">
              <h3 class="text-xl font-semibold mb-2">
                <a href={`/series/${s.slug}`} class="text-blue-600 hover:text-blue-800">
                  {s.title}
                </a>
              </h3>
              <p class="text-gray-600 mb-4">
                {s.description}
              </p>
              <div class="flex items-center text-sm text-gray-500">
                <span>{s.articleCount} {s.articleCount === 1 ? 'Article' : 'Articles'}</span>
                <span class="mx-2">•</span>
                <span>Started {s.startDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
  </div>
  
  <Footer slot="footer" />
</BaseLayout>
