---
import BaseLayout from "../layouts/BaseLayout.astro";
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";
import { getAllArticles, getAllSeries } from "../utils/content";
import { formatDateUTC } from '../utils/formatDate';

const articles = await getAllArticles();
const latestArticles = [...articles].sort((a, b) => b.publishDate.getTime() - a.publishDate.getTime()).slice(0, 4);
const series = await getAllSeries();
const latestSeries = [...series].sort((a, b) => b.startDate.getTime() - a.startDate.getTime()).slice(0, 4);
---

<BaseLayout title="Signals & Systems - Musings on thoughtful technology">
  <Nav slot="header" />
  
  <div class="container mx-auto px-4 py-12 sm:px-6 lg:px-8">
    <section class="text-center mb-16">
      <h1 class="text-5xl font-extrabold text-gray-900 mb-6">Signals & Systems</h1>      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Musings on technology, systems design, and the art of building thoughtful digital experiences through hands-on exploration and documentation.      </p>    </section>
    
    <section class="max-w-5xl mx-auto mb-16">
      <h2 class="text-3xl font-bold text-gray-800 mb-6">Latest Articles</h2>
      <div class="grid gap-8 md:grid-cols-2">
        {latestArticles.map(article => (
          <div class="bg-white rounded-lg shadow-md overflow-hidden">            <div class="p-6">
              <h3 class={`text-xl font-semibold mb-2${article.series && article.series.toLowerCase() === 'isomon' ? ' isomon-title' : ''}`}>
                <a href={`/${article.slug}`} class={article.series && article.series.toLowerCase() === 'isomon' ? 'isomon-title' : 'text-blue-600 hover:text-blue-800'}>
                  {article.title}
                </a>
              </h3>
              <p class="text-gray-600 mb-4">
                {article.description}
              </p>
              <div class="flex items-center text-sm text-gray-500">
                <span>{formatDateUTC(article.publishDate)}</span>
                <span class="mx-2">•</span>
                <span>JELL</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
    
    <section class="max-w-5xl mx-auto">
      <h2 class="text-3xl font-bold text-gray-800 mb-6">Series</h2>
      <div class="grid gap-8 md:grid-cols-2">
        {latestSeries.map(s => (
          <div class="bg-white rounded-lg shadow-md overflow-hidden">
            <div class="p-6">
              <h3 class={`text-xl font-semibold mb-2${s.slug && s.slug.toLowerCase() === 'isomon' ? ' isomon-title' : ''}`}>
                <a href={`/series/${s.slug}`} class={s.slug && s.slug.toLowerCase() === 'isomon' ? 'isomon-title' : 'text-blue-600 hover:text-blue-800'}>
                  {s.title}
                </a>
              </h3>
              <p class="text-gray-600 mb-4">
                {s.description}
              </p>
              <div class="flex items-center text-sm text-gray-500">
                <span>{s.articleCount} {s.articleCount === 1 ? 'Article' : 'Articles'}</span>
                <span class="mx-2">•</span>
                <span>Started {formatDateUTC(s.startDate)}</span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
  </div>
  
  <Footer slot="footer" />
</BaseLayout>
